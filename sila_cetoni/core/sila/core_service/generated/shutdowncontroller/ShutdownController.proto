syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.core.shutdowncontroller.v1;

/* Provides a generic way of telling a SiLA2 server that it is about to be shut down or to shut down itself. The server implements a routine to be executed before the hardware is shut down (e.g. saving device parameters or bringing the device into a safe position) and may also be capable of shutting itself down completely. */
service ShutdownController {
  /* Initiates the pre-shutdown routine. If no errors occurred during this process the server should be considered ready to be physically shutdown (i.e. the device can be shut down/powered off). Shutting down the server must be done manually, e.g. by unplugging the power to the device. */
  rpc PrepareShutdown (sila2.de.cetoni.core.shutdowncontroller.v1.PrepareShutdown_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
  /* Monitor the state of PrepareShutdown */
  rpc PrepareShutdown_Info (sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
  /* Retrieve result of PrepareShutdown */
  rpc PrepareShutdown_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.core.shutdowncontroller.v1.PrepareShutdown_Responses) {}
  /* Initiates the shutdown routine. This first executes the pre-shutdown routine (to store parameters, bring the device in a safe position, etc.) and then physically shuts down the device. If errors occurred during the pre-shutdown process the server is considered not ready to be physically shutdown (i.e. the device will not be shut down/powered off). */
  rpc Shutdown (sila2.de.cetoni.core.shutdowncontroller.v1.Shutdown_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
  /* Monitor the state of Shutdown */
  rpc Shutdown_Info (sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
  /* Retrieve result of Shutdown */
  rpc Shutdown_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.core.shutdowncontroller.v1.Shutdown_Responses) {}
}

/* Parameters for PrepareShutdown */
message PrepareShutdown_Parameters {
}

/* Responses of PrepareShutdown */
message PrepareShutdown_Responses {
}

/* Parameters for Shutdown */
message Shutdown_Parameters {
}

/* Responses of Shutdown */
message Shutdown_Responses {
}
